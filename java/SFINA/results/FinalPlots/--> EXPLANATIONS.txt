EXPLANATIONS

1. case30RandRemovalConsistentPowerLoss:
- 1 random link removed in every time step (2.4% of total links)
- Averaged over 10 repetition with different random sequences
- Same sequences of links for the 4 configuratons (Mtpwr, Ipss, AC, DC)

2. case30RandRemovalConsistentTimeIteration:
- same experiment as 1. measuring the total simulation time (not power flow simulation time) and the iterations needed in each step
- the gray bars are also averages over 10 runs, that's why they're not necessarily integer numbers. 
That alos means,that if >1 there clearly were more iterations in several of the runs.

3. case30RandRemovalPowerLoss:
- Similar to 1., but random sequence of attack links generated every of the 40 runs (10 repetitions * 4 configurations)
- I think compared to 1. this is not so meaningful

4. case30RateRedPowerLoss:
- In each step the capacity is reduced by around 2.3% leading to a total reduction of 50% until the last time step
- Average over 5 runs for each configuration
- the data is loaded once at the beginning

5. case30RateRedReloadPowerLoss
- Same as 4., but the data is loaded in each step, thus restoring the failed lines
- The capacity is reduced in each time step from the initial value by an increasing percentage (2.3%, 4.6%, ..., 50%)

6. case30RateReductionTimeIterations
- Same experiment as 5. 
- see 2. for more explanations
- nice to see here that beginning with capacity reduction of 20% the network starts to cascade more violently

7. case30TimeMeasurement
- Average over 100 power flows 
- without cascades (convergence in first iteration, no overload, no limit violation)

8. case118RandRemovalConsistentPowerLineLoss
- Same ex as 1 but for case 118
- InterPSS AC doesn't converge from time step 2 on when perturbation starts, the others do
- here I included the line loss as well, the next plot is this one without line losses

9. case118RandRemovalConsistentPowerLoss
- see 8.

10. case118TimeMeasurement
- Same as 7. but with case 118

11. case2736RandRemovalConsistentPowerLoss
- Polish summer off peak case 2736 nodes
- Removing 4 links in each time step (0-3% until the 30th time step)
- At first time step it violates many link capacities already, therefore starts at a power loss at almost 40%
- AC didn't converge for both Backends because it always violated generator limits